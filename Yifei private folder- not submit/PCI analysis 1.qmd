---
title: "PCI analysis 1"
author: "Yifei Zhang"
output: html_document
---




```{r}
# Load required libraries
library(dplyr)
library(ggplot2)
library(sf)

# 1. Standardize road names
# 加载数据集
cleaned_dataset <- readRDS("dataset/cleaned_dataset.rds")
load("dataset/Pavement_Condition_Index.RData")

Pavement_Condition_Index <- Pavement_Condition_Index %>%
  mutate(StreetName = tolower(trimws(StreetName)))  

# 2. Match based on road names and ensure Segment_ID is merged
merged_data <- cleaned_dataset %>%
  left_join(Pavement_Condition_Index, by = c("Road.Name" = "StreetName"))

# 3. Directly calculate accident_count in merged_data
merged_data <- merged_data %>%
  group_by(Segment_ID) %>%              # Group by Segment_ID
  mutate(accident_count = n()) %>%      # Calculate accident_count directly
  ungroup()

# 4. Visualization: Analyze the relationship between PCI and accident count
merged_data %>%
  filter(!is.na(PCI)) %>%               # Exclude records with missing PCI
  ggplot(aes(x = PCI, y = accident_count)) +
  geom_point(color = "blue", size = 2) +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  labs(
    title = "Relationship Between PCI and Accident Count",
    x = "PCI (Pavement Condition Index)",
    y = "Accident Count"
  ) +
  theme_minimal()

# Optional: Perform further analysis with stratified variables like Traffic.Control
merged_data %>%
  group_by(Traffic.Control) %>%
  summarize(
    avg_accidents = mean(accident_count),  # Average accident count by Traffic.Control
    avg_pci = mean(PCI, na.rm = TRUE),     # Average PCI by Traffic.Control
    .groups = 'drop'
  ) %>%
  print()

```



```{r}
#Logarithm
geo_analysis %>%
  mutate(log_accident_count = log1p(accident_count)) %>%
  ggplot(aes(x = avg_pci, y = log_accident_count)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE)

```

