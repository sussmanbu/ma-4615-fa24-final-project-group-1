---
title: "Exposing the Secrets Behind Car Crashes in Montgomery County – You’ll Be Shocked!"
description: ""
author: "Group 1"
toc: true
draft: FALSE
filters: 
  - shinylive
---

In Montgomery County, Maryland, efforts to enhance traffic safety are supported by a rich array of public data. These datasets, ranging from road conditions to detailed crash reports, offer valuable insights into the factors influencing accidents. While deteriorating roads are often perceived as the primary hazard, the data reveals a more complex reality. Analysis shows that although poor road conditions do contribute to accidents, other factors—such as weather and driver behavior—play equally significant roles, underscoring the multifaceted nature of improving road safety.

To find out, we dug into the data to see how road quality, weather, and surface conditions shape the likelihood of accidents. What we found might surprise you. While pavement conditions do play a role, they’re far from the whole story.

**Does Pavement Quality Correlate with Accidents?**

Using the Pavement Condition Index (PCI) dataset maintained by the Montgomery County Department of Transportation, researchers evaluated whether road quality directly influences traffic collisions. The PCI rates road conditions on a scale from 1 to 100, with lower scores indicating poorer quality.

A comparison of crash data from the county’s Automated Crash Reporting System (ACRS) revealed only a weak correlation between low PCI scores and higher accident rates. Contrary to popular belief, even roads in poor condition (PCI scores of 0–30) were not consistently associated with significantly higher crash frequencies.

This finding indicates that while poor roads may contribute to accidents, they are not the primary factor.

![](scripts/plot intial.png)

**Weather Conditions and Their Surprising Impact**

The crash data, collected by various law enforcement agencies, shows that weather plays a critical role in traffic safety. Wet road surfaces, a common result of storms or rain, were linked to increased accident counts. However, an interesting trend emerged: accidents often decreased during rainstorms.

Experts hypothesize that this counterintuitive trend occurs because drivers exercise greater caution during active rainfall, reducing their speed and increasing following distances. However, residual wet surfaces after rain still pose a heightened risk, especially when drivers resume normal speeds.

**Other Key Factors in Accidents**

The detailed crash reports highlight other significant contributors to traffic incidents:

Driver Behavior: Distraction and substance use were common factors in many collisions, underscoring the importance of driver accountability.

Light Conditions: Reduced visibility during dusk and nighttime hours also correlated with higher accident rates, emphasizing the need for better lighting infrastructure.


**The Big Takeaways: Better Roads Help—But Not Much**

While smoother pavement is linked to slightly fewer accidents, the effect is small. Weather and Wet Roads Matter More Wet roads increase accidents, while rainy weather may make drivers more cautious. The U-shaped trend between PCI and accidents shows how other factors—like driver behavior or traffic flow—play a big role. What This Means for Safer Roads

Our findings point to a broader truth

keeping roads safe takes more than just paving over potholes. It means targeting the biggest risks, like managing wet-road hazards and encouraging safer driving during bad weather.

By understanding these dynamics, we can make smarter decisions—whether that’s where to invest in road improvements or how to educate drivers about staying safe in tough conditions.

**Get Behind the Wheel, Explore the Data Yourself**

Want to see these patterns for yourself? We’ve built an interactive dashboard where you can dig into the data.

Toggle between weather conditions to see how rain or wet roads impact accident trends. It’s an easy way to explore what’s happening on our roads and what factors matter most.


```{shinylive-r}
#| echo: false
#| standalone: true
#| viewerHeight: 640
#| embed-resources: false 
#| 
suppressPackageStartupMessages(library(shiny))
suppressPackageStartupMessages(library(tidyverse))

options("readr.edition" = 1)

# Define UI for app ----
ui <- fluidPage(
  
  # App title ----
  titlePanel("Interactive Crash Data Exploration"),
  
  # Sidebar layout with input and output definitions ----
  sidebarLayout(
    # Sidebar panel for inputs
    sidebarPanel(
      # Input: Select column to visualize
      selectInput(inputId = "selected_column", 
                  label = "Select a Column to Visualize:",
                  choices = c("Speed.Limit", "Injury.Severity", "Surface.Condition"),
                  selected = "Speed.Limit"),
      
      # Input: Slider for the number of bins
      sliderInput(inputId = "bins",
                  label = "Number of bins:",
                  min = 1,
                  max = 50,
                  value = 20)
    ),
    
    # Main panel for displaying outputs
    mainPanel(
      # Output: Histogram
      plotOutput(outputId = "histPlot"),
      
      # Display Insights
      verbatimTextOutput(outputId = "summary")
    )
  )
)

# Define server logic ----
server <- function(input, output) {
  
  # Load data from the provided URL
  data <- read_rds("https://sussmanbu.github.io/ma-4615-fa24-final-project-group-1/scripts/subset_data.rds")
  # Updated histogram/bar plot logic
  output$histPlot <- renderPlot({
    if (is.numeric(data[[input$selected_column]])) {
      # Numeric columns: Use histogram
      ggplot(data, aes(x = !!sym(input$selected_column))) +
        geom_histogram(bins = input$bins, fill = "steelblue", color = "black") +
        labs(x = input$selected_column, y = "Count",
             title = paste("Histogram of", input$selected_column)) +
        theme_minimal()
    } else {
      # Categorical columns: Use bar chart
      ggplot(data, aes(x = !!sym(input$selected_column))) +
        geom_bar(fill = "steelblue", color = "black") +
        labs(x = input$selected_column, y = "Count",
             title = paste("Bar Chart of", input$selected_column)) +
        theme_minimal()
    }
  })
  
  # Generate insights based on selected column
  output$summary <- renderPrint({
    selected_data <- data[[input$selected_column]]
    if (input$selected_column == "Speed.Limit") {
      avg_speed <- mean(selected_data, na.rm = TRUE)
      cat("Average Speed Limit (when crash occurred):", round(avg_speed, 2), "mph")
    } else if (input$selected_column == "Injury.Severity") {
      cat("Injury Severity Counts:\n")
      print(table(selected_data, useNA = "ifany"))
    } else if (input$selected_column == "Surface.Condition") {
      cat("Surface Condition Distribution:\n")
      print(table(selected_data, useNA = "ifany"))
    }
  })
}


# Create Shiny app ----
shinyApp(ui, server)

```